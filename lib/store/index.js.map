{"version":3,"sources":["../../src/store/index.js"],"names":["initialState","baseline_middlewares","process","env","NODE_ENV","dev_store","require","default"],"mappings":";;;;;;AAAA;;AAKA;;;;AAKA;;;;;;AAEA;;;;;AAVA;;;kBAae,UAACA,YAAD,EAAkB;AAC/B;;;AAGA,MAAMC,uBAAuB,sBAA7B;;AAEA;;;AAGA,MAAIC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,QAAMC,YAAYC,QAAQ,aAAR,CAAlB;AACA,WAAOD,UAAUE,OAAV,CAAkBP,YAAlB,sBAA6CC,oBAA7C,CAAP;AACD;;AAED;;;AAGA,SAAO,4CAELD,YAFK,EAGL,oBAAQ,wCAAmBC,oBAAnB,CAAR,CAHK,CAAP;AAKD,C;;AA9BD","file":"index.js","sourcesContent":["import {createStore, applyMiddleware, compose} from 'redux';\n\n/**\n * third party middleware\n */\nimport thunkMiddleware from 'redux-thunk';\n\n/**\n * import root reducer\n */\nimport rootReducer from '../reducers';\n\n/**\n * create and return the main store\n */\nexport default (initialState) => {\n  /**\n   * baseline middleware used in all environments\n   */\n  const baseline_middlewares = [thunkMiddleware];\n\n  /**\n   * build store for non-production environments\n   */\n  if (process.env.NODE_ENV !== 'production') {\n    const dev_store = require('./dev.store');\n    return dev_store.default(initialState, rootReducer, baseline_middlewares);\n  }\n\n  /**\n   * return production store\n   */\n  return createStore(\n    rootReducer,\n    initialState,\n    compose(applyMiddleware(...baseline_middlewares))\n  );\n};\n"]}